name: Deploy MOVE

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: SSH 접속 및 move 프로젝트 배포
        uses: appleboy/ssh-action@v1.0.0
        with:
          port: 22
          host: ${{ secrets.SERVER_HOST }}
          key: ${{ secrets.SERVER_KEY }}
          username: ${{ secrets.SERVER_USER }}
          script: |
            # 1. 최신 코드 강제 반영 (move 프로젝트)
            cd move
            git fetch --all
            git reset --hard origin/main
            git clean -fdx   # 추적 안되는 파일/폴더 제거

            # 2. 기존 컨테이너 종료 (볼륨 보존)
            docker compose down --remove-orphans

            # 3. backend JAR 강제 새 빌드
            cd backend
            chmod +x ./gradlew
            ./gradlew clean bootJar -x test
            ls -la build/libs/  # JAR 제대로 생성됐는지 확인
            cp build/libs/*.jar ../backend.jar
            cd ..

            # 4. frontend 빌드 준비 (.env.production 생성)
            cd frontend
            cat > .env.production <<'EOL'
            VITE_WS_URL=https://move.io.kr/ws
            VITE_IO_URL=https://move.io.kr/backend
            VITE_STOMP_URL=https://move.io.kr/ws
            VITE_STOMP_USER=guest
            VITE_STOMP_PASS=guest
            VITE_GPS_TOPIC=/topic/gps
            VITE_KAKAO_MAP_APP_KEY=${{ secrets.VITE_KAKAO_MAP_APP_KEY }}
            EOL

            # 5. frontend 빌드 (dist 생성 → Caddy 서빙)
            npm install
            npm run build
            cd ..

            # 6. backend + db 컨테이너 실행 (프론트는 Caddy에서 서빙)
            docker compose down
            docker compose up -d --build

            # 7. Caddy Update.....
            cd ../gwon
            docker compose down
            docker compose up -d 

            # 8. 배포 완료
            